[keyboard]
name = "lily58 RE"
product_name = "lily58-rp2040"
vendor_id = 0x8D1D
product_id =0xB4C2 
manufacturer = "bhe"
chip = "rp2040"
# board = "nice!nano_v2"
usb_enable = true

# [matrix]
# Input and output pins are mandatory
# input_pins = ["PIN_5", "PIN_6", "PIN_7", "PIN_8", "PIN_9"]
# output_pins = ["GP27", "GP26", "GP22", "GP20", "GP23", "GP21"]
# WARNING: Currently row2col/col2row is set in RMK's feature gate, configs here do nothing actually
# row2col = true

# col2row
# row2col = false
[layout]
rows = 5
cols = 12
layers = 5
keymap = [
    # LBASE layer
    [
        ["Escape", "Kc1", "Kc2", "Kc3", "Kc4", "Kc5",                     "Kc6", "Kc7", "Kc8", "Kc9", "Kc0", "Backspace"],
        ["Tab", "Q", "W", "E", "R", "T",                                   "Y", "U", "I", "O", "P", "Backslash"],
        ["LCtrl", "MT(A, LCtrl)", "MT(S,LAlt)", "MT(D,LGui)", "MT(F, LShift)", "G",  "H", "MT(J,RShift)", "MT(K,RGui)", "MT(L, RAlt)", "MT(Semicolon, RCtrl)", "Quote"],
        ["LShift", "Z", "X", "C", "V", "B",  "N", "M", "Comma", "Dot", "Slash", "MT(Grave, RShift)"],
        ["__","CapsLock", "Tab", "MO(2)", "LT(3, Space)","No",            "_", "Enter", "MO(1)", "LeftBracket", "RightBracket", "__"]
    ],
    
    # LRAISE layer (Layer 1)
    [
        ["Grave", "WM(Kc1, LShift)", "WM(Kc2, LShift)", "WM(Kc3, LShift)", "WM(Kc4, LShift)", "WM(Kc5, LShift)", "WM(Kc6, LShift)", "WM(Kc7, LShift)", "Minus", "WM(Equal, LShift)", "_", "Backspace"],
        ["_", "Kc1", "Kc2", "Kc3", "Kc4", "Kc5",                        "Kc6", "Kc7", "Kc8", "Kc9", "Kc0", "WM(Backslash, LShift)"],
        ["_", "F1", "F2", "F3", "F4", "F5",                              "F6", "Minus", "Equal", "LeftBracket", "RightBracket", "_"],
        ["_", "F7", "F8", "F9", "F10", "F12",                            "LeftBracket", "RightBracket", "WM(Comma, LShift)", "WM(Dot, LShift)", "WM(Slash, LShift)", "WM(Grave, RShift)"],
        ["__", "No", "No", "No", "No", "No", "No", "No", "No", "No", "No", "__"]
    ],
    
    # LLOWER layer (Layer 2)
    [
        ["Grave", "WM(Kc1, LShift)", "WM(Kc2, LShift)", "WM(Kc3, LShift)", "WM(Kc4, LShift)", "WM(Kc5, LShift)", "WM(Kc6, LShift)", "WM(Kc7, LShift)", "Minus", "WM(Equal, LShift)", "_", "Backspace"],
        ["MO(3)", "WM(Kc1, LShift)", "WM(Kc2, LShift)", "WM(Kc3, LShift)", "WM(Kc4, LShift)", "WM(Kc5, LShift)", "WM(Kc6, LShift)", "WM(Kc7, LShift)", "WM(Kc8, LShift)", "WM(Kc9, LShift)", "WM(Kc0, LShift)", "WM(Backslash, LShift)"],
        ["_", "F1", "F2", "F3", "F4", "F5",                              "Backspace", "KpMinus", "KpEqual", "WM(LeftBracket, LShift)", "WM(RightBracket, LShift)", "Enter"],
        ["_", "F7", "F8", "F9", "Tab", "F6",                            "WM(LeftBracket, LShift)", "WM(RightBracket, LShift)", "Comma", "Dot", "Slash", "Grave"],
        ["__", "No", "No", "No", "No", "No", "No", "No", "No", "No", "No", "__"]
    ],
    
    # # LFUNC layer (Layer 3)
    [
        ["_", "F1", "F2", "F3", "F4", "F5",                             "Kc6", "Kc7", "Kc8", "Kc9", "Kc0", "Grave"],
        ["MO(4)", "_", "_", "MouseUp", "PageUp", "PageDown",           "_", "MouseWheelUp", "MouseWheelDown", "_", "P", "Minus"],
        ["_", "_", "MouseLeft", "MouseDown", "MouseRight", "F6",       "Left", "Down", "UP", "Right", "Semicolon", "Quote"],
        ["_", "_", "_", "_", "Home", "End",  "MouseBtn1", "MouseBtn2", "Comma", "Dot", "Slash", "RShift"],
        ["__", "No", "No", "No", "No", "No", "No", "No", "No", "No", "No", "__"]
    ],

    # # LDEBUG layer (Layer 4)
    [
        ["F", "F1", "F2", "F3", "F4", "F5",                              "Kc6", "Kc7", "Kc8", "Kc9", "Kc0", "Grave"],
        ["_", "_", "_", "MouseUp", "R", "T",                          "Y", "U", "I", "O", "P", "Minus"],
        ["_", "MouseLeft", "MouseLeft", "DebugToggle", "MouseRight", "F6",    "Left", "Down", "UP", "Down", "Semicolon", "Quote"],
        ["_", "Z", "X", "C", "Home", "Bootloader", "N", "M", "Comma", "Dot", "Slash", "RShift"],
        ["__", "No", "No", "No", "No", "No", "No", "No", "No", "No", "No", "__"]
    ]
]


[storage]

[split]
connection = "serial"

# input_pins = ["PIN_5", "PIN_6", "PIN_7", "PIN_8", "PIN_9"]
# output_pins = ["GP27", "GP26", "GP22", "GP20", "GP23", "GP21"]
[split.central]
rows = 5
cols = 6
row_offset = 0
col_offset = 0
serial = [
    { instance = "UART0", tx_pin = "PIN_0", rx_pin = "PIN_1" },
]

[split.central.matrix]
matrix_type = "normal"
input_pins = ["PIN_5", "PIN_6", "PIN_7", "PIN_8", "PIN_9"]
output_pins = ["PIN_27", "PIN_26", "PIN_22", "PIN_20", "PIN_23", "PIN_21"]

[[split.peripheral]]
rows = 5
cols = 6
row_offset = 0
col_offset = 0
serial = [{ instance = "UART0", tx_pin = "PIN_0", rx_pin = "PIN_1" }]

[split.peripheral.matrix]
matrix_type = "normal"
input_pins = ["PIN_5", "PIN_6", "PIN_7", "PIN_8", "PIN_9"]
output_pins = ["PIN_21", "PIN_23", "PIN_20", "PIN_22", "PIN_26", "PIN_27"]
#output_pins = ["PIN_27", "PIN_26", "PIN_22", "PIN_20", "PIN_23", "PIN_21"]

[behavior]

tap_hold = { enable_hrm = true, prior_idle_time = "120ms", hold_timeout = "250ms", post_wait_time = "50ms"}
